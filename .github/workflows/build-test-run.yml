name: Laravel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy .env
        run: cp .env.example .env

      - name: Install Dependencies
        run: composer update -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Set file permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Read database connection details from .env
        id: env
        run: |
          echo "DB_CONNECTION=$(grep -oP '^DB_CONNECTION=\K.*' .env)" >> $GITHUB_ENV
          echo "DB_HOST=$(grep -oP '^DB_HOST=\K.*' .env)" >> $GITHUB_ENV
          echo "DB_PORT=$(grep -oP '^DB_PORT=\K.*' .env)" >> $GITHUB_ENV
          echo "DB_DATABASE=$(grep -oP '^DB_DATABASE=\K.*' .env)" >> $GITHUB_ENV
          echo "DB_USERNAME=$(grep -oP '^DB_USERNAME=\K.*' .env)" >> $GITHUB_ENV
          echo "DB_PASSWORD=$(grep -oP '^DB_PASSWORD=\K.*' .env)" >> $GITHUB_ENV

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: ${{ env.DB_CONNECTION }}
          DB_HOST: ${{ env.DB_HOST }}
          DB_PORT: ${{ env.DB_PORT }}
          DB_DATABASE: ${{ env.DB_DATABASE }}
          DB_USERNAME: ${{ env.DB_USERNAME }}
          DB_PASSWORD: ${{ env.DB_PASSWORD }}
        run: vendor/bin/phpunit

        run: |
          docker build -t $DOCKER_REGISTRY/$GITHUB_REPOSITORY:$IMAGE_TAG .
          docker push $DOCKER_REGISTRY/$GITHUB_REPOSITORY:$IMAGE_TAG

      - name: Build and Push Docker image to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_REPOSITORY: your-dockerhub-username/your-repository
          IMAGE_TAG: ${{ github.run_number }}
        run: |
          docker build -t $DOCKER_REPOSITORY:$IMAGE_TAG .
          docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
          docker push $DOCKER_REPOSITORY:$IMAGE_TAG
